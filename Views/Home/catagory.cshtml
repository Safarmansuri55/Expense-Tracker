@model Expanse_Manager.Models.catagory
@{
    ViewBag.Title = "catagory";
    Layout = null;
}
<html>
<body>
    <link href="~/css/forms.css" rel="stylesheet" />
    @using (Html.BeginForm("Addcatagory", "Home", FormMethod.Post))
    {
<div class="form">
    <form autocomplete="off">
        <h2>Category</h2>

        <div class="form-group">
            <label>category*</label>
            @*@Html.TextBoxFor(x => x.catagory_name, new { @class = "form-control" })*@
             <input type="text" id="category" class="form-control" name="catagory_name" placeholder="Name" required="required">
        </div>
        <div class="form-group">
            @*@Html.TextBoxFor(x => x.catagory_limit, new { @class = "form-control" })*@
             <input type="number" id="c_limit" class="form-control" name="catagory_limit" placeholder="category expense limit" required="required">
        </div>
        <span id="error"></span>
        <div class="form-group">
            <button class="btn btn-success btn-lg btn-block" >Add</button>
        </div>
    </form>
    <!-- <div class="text-center">Already have an account? <a href="sing_up.html">Sign up</a></div> -->
</div>
   
    }
</body>
</html>
    
@*<script>
    var selectedRow = null

    function onFormSubmit() {
        if (validate()) {
            var formData = readFormData();
            if (selectedRow == null)
                insertNewRecord(formData);
            else
                updateRecord(formData);
            resetForm();
        }
    }

    function readFormData() {
        var formData = {};
        formData["Name"] = document.getElementById("category").value;
        formData["limit"] = document.getElementById("c_limit").value;
        return formData;
    }

    function insertNewRecord(data) {
        var table = document.getElementById("categorylist").getElementsByTagName('tbody')[0];
        var newRow = table.insertRow(table.length);
        cell1 = newRow.insertCell(0);
        cell1.innerHTML = data.Name;
        cell2 = newRow.insertCell(1);
        cell2.innerHTML = data.limit;
        cell2 = newRow.insertCell(2);
        cell2.innerHTML = `<a  style="background-color: navy; color: white; padding: 7px 10px; cursor: pointer;  " onClick="onEdit(this)">Edit</a>
                       <a style="background-color: navy; color: white; padding: 7px 10px; cursor: pointer; " onClick="onDelete(this)">Delete</a>`;
    }

    function resetForm() {
        document.getElementById("category").value = "";
        document.getElementById("c_limit").value = "";
        selectedRow = null;
    }

    function onEdit(td) {
        selectedRow = td.parentElement.parentElement;
        document.getElementById("category").value = selectedRow.cells[0].innerHTML;
        document.getElementById("c_limit").value = selectedRow.cells[1].innerHTML;
    }
    function updateRecord(formData) {
        selectedRow.cells[0].innerHTML = formData.Name;
        selectedRow.cells[1].innerHTML = formData.limit;
    }

    function onDelete(td) {
        if (confirm('Are you sure to delete this record ?')) {
            row = td.parentElement.parentElement;
            document.getElementById("categorylist").deleteRow(row.rowIndex);
            resetForm();
        }
    }
    function validate() {
        isValid = true;
        if (document.getElementById("category").value == "") {
            isValid = false;
            document.getElementById("fullNameValidationError").classList.remove("hide");
        } else {
            isValid = true;
            if (!document.getElementById("fullNameValidationError").classList.contains("hide"))
                document.getElementById("fullNameValidationError").classList.add("hide");
        }
        return isValid;
    }
</script>

*@
